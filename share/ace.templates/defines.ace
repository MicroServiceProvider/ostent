[[define "startpanel"]]
[[$N := (index . 0)]]
[[$D := (index . 1)]]
[[$t := (index . 2)]]
  | <div {{ClassPositive [[$N]] "" "panel panel-default"}}>
  div.h4.padding-left-like-panel-heading <a {{HrefT $p [[$N]]}}>[[$t]]</a>
  | <ul  {{ClassPositive [[$N]] "hidden" "list-group"}}>
  li.list-group-item.text-nowrap.th
    ul.list-inline
      li
        span
          b Delay
          |  
          span.badge {{[[$D]]}}
        |  
        div.btn-group
          {{template "defines::alink_badgeleft"  LessD $p [[$D]] "btn btn-default"}}
          {{template "defines::alink_badgeright" MoreD $p [[$D]] "btn btn-default"}}
      li
        span
          b Rows
          |  
          span.badge {{[[$N]].Absolute}}
        |  
        div.btn-group
          {{template "defines::alink_badgeleft"  LessN $p [[$N]] "btn btn-default"}}
          {{template "defines::alink_badgeright" MoreN $p [[$N]] "btn btn-default"}}
  | </ul>
[[end]]

= content alink_badgeleft
  | <a href={{.Href}} {{class}}={{.Class}} onClick={this.handleClick}
  |   >{{.Badge}} {{.Text}}</a>
= content alink_badgeright
  | <a href={{.Href}} {{class}}={{.Class}} onClick={this.handleClick}
  |   >{{.Text}} {{.Badge}}</a>

= content thvlink
  th {{class}}="header {{.AlignClass}}"
    | <a href={{.LinkHref}} {{class}}={{.LinkClass}} onClick={this.handleClick}
    |   >{{.LinkText}}<span {{class}}={{.CaretClass}}></span></a>

= content define_linkbrand
  | <a {{class}}="navbar-brand clip12" href="/"
  |    {{TitlePrefixed "hostname " .Data.HN}}>{{.Data.HN}}</a>

{{define "defines::define_spanla"}}<span>{{.Data.LA}}</span>{{end}}
{{define "defines::define_spanup"}}<span>{{.Data.UP}}</span>{{end}}

= content define_panelmem
  {{$p := .Data.Params}}
  [[template "startpanel" Chain `$p.Memn` `$p.Memd` "Memory"]]
  | <table {{ClassNonZero $p.Memn "table table-hover" "hidden"}}>
  thead
    tr
      th
      th.text-right Free
      th.text-right Use%
      th.text-right Used
      th.text-right Total
  tbody
    {{if .Data.MEM}}
      {{range $mem := .Data.MEM.List}}
        {{jsx  `{this.List(Data).map(function($mem) { return`}}
        | <tr {{Key "mem-rowby-kind" $mem.Kind}}>
        td {{$mem.Kind}}
        td.text-right {{$mem.Free}}
        | <td {{class}}="text-right bg-usepct"
        | data-usepct={{$mem.UsePct}}>{{$mem.UsePct}}%</td>
        td.text-right {{$mem.Used}}
        td.text-right {{$mem.Total}}
        | </tr>
        {{jsx `})}`}}
      {{end}}
    {{end}}
  | </table></div>

= content define_paneldf
  {{$p := .Data.Params}}
  [[template "startpanel" Chain `$p.Dfn` `$p.Dfd` "Disk usage"]]
  | <table {{ClassNonZero $p.Dfn "table table-hover" "hidden"}}>
  thead
    tr.text-nowrap
      {{$r := "text-right"}}
      {{template "defines::thvlink" Vlink $p $p.Dfk 1 "Device"  ""}}{{/* FS     */}}
      {{template "defines::thvlink" Vlink $p $p.Dfk 2 "Mounted" ""}}{{/* MP     */}}
      {{template "defines::thvlink" Vlink $p $p.Dfk 3 "Avail"   $r}}{{/* AVAIL  */}}
      {{template "defines::thvlink" Vlink $p $p.Dfk 4 "Use%"    $r}}{{/* USEPCT */}}
      {{template "defines::thvlink" Vlink $p $p.Dfk 5 "Used"    $r}}{{/* USED   */}}
      {{template "defines::thvlink" Vlink $p $p.Dfk 6 "Total"   $r}}{{/* TOTAL  */}}
  tbody
    {{if .Data.DF}}
      {{range $df := .Data.DF.List}}
        {{jsx `{this.List(Data).map(function($df) { return`}}
        |
          <tr {{Key "df-rowby-dirname" $df.DirName}}>
            <td {{class}}="text-nowrap clip12" title={{$df.DevName}}>{{$df.DevName}}</td>
            <td {{class}}="text-nowrap clip12" title={{$df.DirName}}>{{$df.DirName}}</td>
        td.text-right.text-nowrap
          span.mutext title="Inodes free" {{$df.Ifree}}
          |  {{$df.Avail}}

        | <td {{class}}="text-right bg-usepct text-nowrap"
        | data-usepct={{$df.UsePct}}>
        span.mutext title="Inodes use%" {{$df.IusePct}}%
        |  {{$df.UsePct}}%</td>

        td.text-right.text-nowrap
          span.mutext title="Inodes used" {{$df.Iused}}
          |  {{$df.Used}}
        td.text-right.text-nowrap
          span.mutext title="Inodes total" {{$df.Inodes}}
          |  {{$df.Total}}
        | </tr>
        {{jsx `})}`}}
      {{end}}
    {{end}}
  | </table></div>

= content define_panelcpu
  {{$p := .Data.Params}}
  [[template "startpanel" Chain `$p.CPUn` `$p.CPUd` "CPU"]]
  | <table {{ClassNonZero $p.CPUn "table table-hover" "hidden"}}>
  thead
    tr
      th
      th.text-right User
      th.text-right Sys
      th.text-right Wait
      th.text-right Idle
  tbody
    {{if .Data.CPU}}
      {{range $cpu := .Data.CPU.List}}
        {{jsx  `{this.List(Data).map(function($cpu) { return`}}
        | <tr {{Key "cpu-rowby-N" $cpu.N}}>
        td.text-right.text-nowrap {{$cpu.N}}
        |
          <td {{class}}="text-right bg-usepct"
            data-usepct={{$cpu.UserPct}}>{{$cpu.UserPct}}%</td>
          <td {{class}}="text-right bg-usepct"
            data-usepct={{$cpu.SysPct}}>{{$cpu.SysPct}}%</td>
          <td {{class}}="text-right bg-usepct"
            data-usepct={{$cpu.WaitPct}}>{{$cpu.WaitPct}}%</td>
          <td {{class}}="text-right bg-usepct-inverse"
            data-usepct={{$cpu.IdlePct}}>{{$cpu.IdlePct}}%</td>
          </tr>
        {{jsx `})}`}}
      {{end}}
    {{end}}
  | </table></div>

= content define_panelif
  {{$p := .Data.Params}}
  [[template "startpanel" Chain `$p.Ifn` `$p.Ifd` "Interfaces"]]
  | <table {{ClassNonZero $p.Ifn "table table-hover" "hidden"}}>
  thead
    tr
      th Interface
      th.text-right IP
      th.text-right.text-nowrap.col-md-3 title="Bits In/Out per second"
        | IO 
        i b
        | ps
      th.text-right.text-nowrap.col-md-3 title="Packets In/Out per second" Packets IO ps
      th.text-right.text-nowrap.col-md-3 title="Drops,Errors In/Out per second" Loss IO ps
  tbody
    {{if .Data.IF}}
      {{range $if := .Data.IF.List}}
        {{jsx `{this.List(Data).map(function($if) { return`}}
        | <tr {{Key "if-rowby-name" $if.Name}}>
        | <td {{class}}="text-nowrap clip12" title={{$if.Name}}>{{$if.Name}}</td>
        td.text-right {{$if.IP}}
        td.text-right.text-nowrap
          span.mutext
            span title="Total BYTES In modulo 4G" {{$if.BytesIn}}
            | /
            span title="Total BYTES Out modulo 4G" {{$if.BytesOut}}
          |  
          span title="BITS In per second" {{$if.DeltaBitsIn}}
          | /
          span title="BITS Out per second" {{$if.DeltaBitsOut}}
        td.text-right.text-nowrap
          span.mutext
            span title="Total packets In modulo 4G" {{$if.PacketsIn}}
            | /
            span title="Total packets Out modulo 4G" {{$if.PacketsOut}}
          |  
          span title="Packets In per second" {{$if.DeltaPacketsIn}}
          | /
          span title="Packets Out per second" {{$if.DeltaPacketsOut}}
        td.text-right.text-nowrap
          span.mutext title="Total drops,errors modulo 4G"
            span title="Total drops In modulo 4G" {{$if.DropsIn}}
            | <span {{ClassNonNil $if.DropsOut "" "hidden"}}>/</span>
            | <span {{ClassNonNil $if.DropsOut "" "hidden"}} title="Total drops Out modulo 4G">{{$if.DropsOut}}</span>
            | ,
            span title="Total errors In modulo 4G" {{$if.ErrorsIn}}
            | /
            span title="Total errors Out modulo 4G" {{$if.ErrorsOut}}
          |  
          | <span {{ClassAllZero $if.DeltaDropsIn $if.DeltaDropsOut $if.DeltaErrorsIn $if.DeltaErrorsOut "mutext"}}>
          span title="Drops In per second" {{$if.DeltaDropsIn}}
          | <span {{ClassNonNil $if.DeltaDropsOut "" "hidden"}}>/</span>
          | <span {{ClassNonNil $if.DeltaDropsOut "" "hidden"}} title="Drops Out per second">{{$if.DeltaDropsOut}}</span>
          | ,
          span title="Errors In per second" {{$if.DeltaErrorsIn}}
          | /
          span title="Errors Out per second" {{$if.DeltaErrorsOut}}
          | </span>
        | </tr>
        {{jsx `})}`}}
      {{end}}
    {{end}}
  | </table></div>

= content define_panelps
  {{$p := .Data.Params}}
  [[template "startpanel" Chain `$p.Psn` `$p.Psd` "Processes"]]
  | <table {{ClassNonZero $p.Psn "table table-hover" "hidden"}}>
  thead
    tr.text-nowrap
      {{$r := "text-right"}}
      {{$c := "text-center"}}
      {{template "defines::thvlink" Vlink $p $p.Psk 1 "PID"     $r}}
      {{template "defines::thvlink" Vlink $p $p.Psk 2 "UID"     $r}}
      {{template "defines::thvlink" Vlink $p $p.Psk 3 "USER"    ""}}
      {{template "defines::thvlink" Vlink $p $p.Psk 4 "PR"      $r}}{{/* PRI  */}}
      {{template "defines::thvlink" Vlink $p $p.Psk 5 "NI"      $r}}{{/* NICE */}}
      {{template "defines::thvlink" Vlink $p $p.Psk 6 "VIRT"    $r}}
      {{template "defines::thvlink" Vlink $p $p.Psk 7 "RES"     $r}}
      {{template "defines::thvlink" Vlink $p $p.Psk 8 "TIME"    $c}}
      {{template "defines::thvlink" Vlink $p $p.Psk 9 "COMMAND" ""}}{{/* NAME */}}
  tbody
    {{if .Data.PS}}
      {{range $ps := .Data.PS.List}}
        {{jsx `{this.List(Data).map(function($ps) { return`}}
        | <tr {{Key "ps-rowby-pid" $ps.PID}}>
        td.text-right  {{$ps.PID}}
        td.text-right  {{$ps.UID}}
        td {{$ps.User}}
        td.text-right  {{$ps.Priority}}
        td.text-right  {{$ps.Nice}}
        td.text-right  {{$ps.Size}}
        td.text-right  {{$ps.Resident}}
        td.text-center {{$ps.Time}}
        td {{$ps.Name}}
        | </tr>
        {{jsx `})}`}}
      {{end}}
    {{end}}
  | </table></div>
