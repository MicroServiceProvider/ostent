* package internal

#+BEGIN_SRC sh :results raw
fst=../vendor/github.com/influxdata/telegraf/internal
snd=.

(diff --unified --ignore-all-space --recursive \
 "$fst"/../agent \
 "$snd"/agent;
 diff --unified --ignore-all-space --recursive \
 "$fst" \
 "$snd") |
awk '{ if ($1 == "---" || $1 == "+++") { $_ = $1 FS $2; }; print }'
#+END_SRC

#+BEGIN_SRC diff
#+RESULTS:
diff --unified --ignore-all-space --recursive ../vendor/github.com/influxdata/telegraf/internal/../agent/accumulator.go ./agent/accumulator.go
--- ../vendor/github.com/influxdata/telegraf/internal/../agent/accumulator.go
+++ ./agent/accumulator.go
@@ -7,7 +7,8 @@
 	"time"
 
 	"github.com/influxdata/telegraf"
-	"github.com/influxdata/telegraf/internal/models"
+
+	internal_models "github.com/ostrost/ostent/internal/models"
 )
 
 func NewAccumulator(
Only in ../vendor/github.com/influxdata/telegraf/internal/../agent: accumulator_test.go
diff --unified --ignore-all-space --recursive ../vendor/github.com/influxdata/telegraf/internal/../agent/agent.go ./agent/agent.go
--- ../vendor/github.com/influxdata/telegraf/internal/../agent/agent.go
+++ ./agent/agent.go
@@ -9,9 +9,9 @@
 	"time"
 
 	"github.com/influxdata/telegraf"
-	"github.com/influxdata/telegraf/internal"
-	"github.com/influxdata/telegraf/internal/config"
-	"github.com/influxdata/telegraf/internal/models"
+
+	"github.com/ostrost/ostent/internal/config"
+	internal_models "github.com/ostrost/ostent/internal/models"
 )
 
 // Agent runs telegraf and collects data based on the given config
@@ -122,8 +122,6 @@
 			a.Config.Agent.Interval.Duration)
 		acc.setDefaultTags(a.Config.Tags)
 
-		internal.RandomSleep(a.Config.Agent.CollectionJitter.Duration, shutdown)
-
 		start := time.Now()
 		gatherWithTimeout(shutdown, input, acc, interval)
 		elapsed := time.Since(start)
@@ -265,7 +263,6 @@
 			a.flush()
 			return nil
 		case <-ticker.C:
-			internal.RandomSleep(a.Config.Agent.FlushJitter.Duration, shutdown)
 			a.flush()
 		case m := <-metricC:
 			for i, o := range a.Config.Outputs {
Only in ../vendor/github.com/influxdata/telegraf/internal/../agent: agent_test.go
Only in .: README.org
Only in .: agent
Only in ../vendor/github.com/influxdata/telegraf/internal/buffer: buffer_test.go
Only in ../vendor/github.com/influxdata/telegraf/internal/config: aws
diff --unified --ignore-all-space --recursive ../vendor/github.com/influxdata/telegraf/internal/config/config.go ./config/config.go
--- ../vendor/github.com/influxdata/telegraf/internal/config/config.go
+++ ./config/config.go
@@ -14,18 +14,22 @@
 	"time"
 
 	"github.com/influxdata/telegraf"
-	"github.com/influxdata/telegraf/internal"
-	"github.com/influxdata/telegraf/internal/models"
 	"github.com/influxdata/telegraf/plugins/inputs"
 	"github.com/influxdata/telegraf/plugins/outputs"
 	"github.com/influxdata/telegraf/plugins/parsers"
 	"github.com/influxdata/telegraf/plugins/serializers"
 
-	"github.com/influxdata/config"
 	"github.com/influxdata/toml"
 	"github.com/influxdata/toml/ast"
+
+	"github.com/ostrost/ostent/internal"
+	internal_models "github.com/ostrost/ostent/internal/models"
 )
 
+var config = struct {
+	UnmarshalTable func(*ast.Table, interface{}) error
+}{UnmarshalTable: toml.UnmarshalTable}
+
 var (
 	// Default input plugins
 	inputDefaults = []string{"cpu", "mem", "swap", "system", "kernel",
@@ -85,21 +89,9 @@
 	// service input to set the timestamp at the appropriate precision.
 	Precision internal.Duration
 
-	// CollectionJitter is used to jitter the collection by a random amount.
-	// Each plugin will sleep for a random time within jitter before collecting.
-	// This can be used to avoid many plugins querying things like sysfs at the
-	// same time, which can have a measurable effect on the system.
-	CollectionJitter internal.Duration
-
 	// FlushInterval is the Interval at which to flush data
 	FlushInterval internal.Duration
 
-	// FlushJitter Jitters the flush interval by a random amount.
-	// This is primarily to avoid large write spikes for users running a large
-	// number of telegraf instances.
-	// ie, a jitter of 5s and interval 10s means flushes will happen every 10-15s
-	FlushJitter internal.Duration
-
 	// MetricBatchSize is the maximum number of metrics that is wrote to an
 	// output plugin in one call.
 	MetricBatchSize int
@@ -423,40 +415,28 @@
 	return nil
 }
 
-// Try to find a default config file at these locations (in order):
-//   1. $TELEGRAF_CONFIG_PATH
-//   2. $HOME/.telegraf/telegraf.conf
-//   3. /etc/telegraf/telegraf.conf
-//
-func getDefaultConfigPath() (string, error) {
-	envfile := os.Getenv("TELEGRAF_CONFIG_PATH")
-	homefile := os.ExpandEnv("${HOME}/.telegraf/telegraf.conf")
-	etcfile := "/etc/telegraf/telegraf.conf"
-	for _, path := range []string{envfile, homefile, etcfile} {
-		if _, err := os.Stat(path); err == nil {
-			log.Printf("Using config file: %s", path)
-			return path, nil
-		}
-	}
-
-	// if we got here, we didn't find a file in a default location
-	return "", fmt.Errorf("No config file specified, and could not find one"+
-		" in $TELEGRAF_CONFIG_PATH, %s, or %s", homefile, etcfile)
-}
-
 // LoadConfig loads the given config file and applies it to c
 func (c *Config) LoadConfig(path string) error {
 	var err error
 	if path == "" {
+		return fmt.Errorf("No config file specified")
+		/*
 		if path, err = getDefaultConfigPath(); err != nil {
 			return err
 		}
+		*/
 	}
 	tbl, err := parseFile(path)
 	if err != nil {
 		return fmt.Errorf("Error parsing %s, %s", path, err)
 	}
 
+	return c.LoadTable(path, tbl)
+}
+
+func (c *Config) LoadTable(path string, tbl *ast.Table) error {
+	var err error
+
 	// Parse tags tables first:
 	for _, tableName := range []string{"tags", "global_tags"} {
 		if val, ok := tbl.Fields[tableName]; ok {
@@ -554,6 +534,10 @@
 	if err != nil {
 		return nil, err
 	}
+	return ParseContents(contents)
+}
+
+func ParseContents(contents []byte) (*ast.Table, error) {
 	// ugh windows why
 	contents = trimBOM(contents)
 
@@ -586,6 +570,9 @@
 		if err != nil {
 			return err
 		}
+		if serializer == nil {
+			return fmt.Errorf("Serializer is nil")
+		}
 		t.SetSerializer(serializer)
 	}
 
Only in ../vendor/github.com/influxdata/telegraf/internal/config: config_test.go
Only in ../vendor/github.com/influxdata/telegraf/internal/config: testdata
Only in ../vendor/github.com/influxdata/telegraf/internal: errchan
Only in ../vendor/github.com/influxdata/telegraf/internal: globpath
Only in ../vendor/github.com/influxdata/telegraf/internal: internal_test.go
Only in ../vendor/github.com/influxdata/telegraf/internal: limiter
Only in ../vendor/github.com/influxdata/telegraf/internal/models: filter_test.go
diff --unified --ignore-all-space --recursive ../vendor/github.com/influxdata/telegraf/internal/models/running_output.go ./models/running_output.go
--- ../vendor/github.com/influxdata/telegraf/internal/models/running_output.go
+++ ./models/running_output.go
@@ -5,7 +5,8 @@
 	"time"
 
 	"github.com/influxdata/telegraf"
-	"github.com/influxdata/telegraf/internal/buffer"
+
+	"github.com/ostrost/ostent/internal/buffer"
 )
 
 const (
Only in ../vendor/github.com/influxdata/telegraf/internal/models: running_output_test.go
Only in .: plugins
#+END_SRC
